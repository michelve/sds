import React from "react"
import { Input, InputField } from "./Input"
import figma from "@figma/code-connect"

/**
 * -- This file was auto-generated by Code Connect --
 * `props` includes a mapping from your code props to Figma properties.
 * You should check this is correct, and update the `example` function
 * to return the code example you'd like to see in Figma
 */

figma.connect(
  Input,
  "<FIGMA_INPUTS_INPUT_FIELD>",
  {
    props: {
      // These props were automatically mapped based on your linked code:
      isDisabled: figma.enum("State", { 
        Disabled: true,
        Default: false
      }),
      value: figma.enum("Value Type", {
        Default: figma.string("Value"),
        Placeholder: undefined
      }),
      placeholder: figma.enum("Value Type", {
        Placeholder: figma.string("Value"),
        Default: "I am a placeholder..."
      }),
    },
    example: (props) => (
      <Input
        isDisabled={props.isDisabled}
        value={props.value}
        placeholder={props.placeholder}
      />
    ),
  },
)

figma.connect(
  InputField,
  "<FIGMA_INPUTS_INPUT_FIELD>",
  {
    props: {
      // These props were automatically mapped based on your linked code:
      label: figma.string("Label"),
      description: figma.boolean("Has Description", {
        true: figma.string("Description"),
        false: undefined,
      }),
      isDisabled: figma.enum("State", { 
        Disabled: true,
        Default: false
      }),
      errorMessage: figma.enum("State", {
        Error: figma.string("Error"),
        Default: undefined
      }),
      value: figma.enum("Value Type", {
        Default: figma.string("Value"),
        Placeholder: undefined
      }),
      placeholder: figma.enum("Value Type", {
        Placeholder: figma.string("Value"),
        Default: "I am a placeholder..."
      }),
    },
    example: (props) => (
      <InputField
        label={props.label}
        description={props.description}
        isDisabled={props.isDisabled}
        errorMessage={props.errorMessage}
        value={props.value}
        placeholder={props.placeholder}
      />
    ),
  },
)
